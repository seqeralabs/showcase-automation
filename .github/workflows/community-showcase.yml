name: community-showcase-autotest
run-name: run-pipelines
on:
  workflow_dispatch:
    inputs:
      dryrun:
        description: "Dryrun (do not submit pipeline)"
        default: false
        type: boolean
        required: false
      timer:
        description: "Environment"
        default: delay120mins
        type: choice
        options:
          - noDelay
          - delay1mins
          - delay5mins
          - delay15mins
          - delay30mins
          - delay60mins
          - delay120mins
          - delay360mins
          - waitForReviewer
      slack:
        description: Slack hook
        type: boolean
        required: false
        default: true
      remove:
        description: Delete run
        default: true
        type: boolean
        required: false

  schedule:
    # Every 2am on Friday and Monday
    - cron: "0 2 * * *"

jobs:
  getdate:
    runs-on: ubuntu-latest
    steps:
      - name: "Get current date"
        run: |
          set -euo pipefail
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        id: date
    outputs:
      date: ${{ steps.date.outputs.date }}

  runtest:
    runs-on: ubuntu-latest
    name: launch.${{ matrix.pipeline.name }}.${{ matrix.compute_env.name }}
    needs: getdate
    continue-on-error: true
    strategy:
      matrix:
        pipeline: 
          - { 
              name: rnaseq, 
              url: nf-core-rnaseq, 
              latest: true, 
              profiles: "test" 
          }
          - {
              name: rnaseq,
              url: nf-core-rnaseq,
              latest: true,
              profiles: "test",
            }
        compute_env:
          - {
              name: community-showcase,
              ref: AWS_Batch_Ireland_FusionV2_NVMe,
              workdir: "s3://nf-tower-bucket",
              workspace_id: 40230138858677,
            }

    steps:
      - name: "export unique run name"
        run: |
          set -euo pipefail
          echo "name=${{ matrix.pipeline.name }}_${{ matrix.compute_env.name }}_${{ needs.getdate.outputs.date }}_$(uuidgen | cut -c 1-8)" >> $GITHUB_OUTPUT
          echo "workspace=${{ matrix.compute_env.workspace_id }}" >> $GITHUB_OUTPUT
        id: id

      - uses: seqeralabs/action-tower-launch@v2
        if: ${{ !inputs.dryrun }}
        id: submit-pipeline
        with:
          pipeline: ${{ matrix.pipeline.url }}
          workspace_id: ${{ steps.id.outputs.workspace }}
          access_token: ${{ secrets.TOWER_ACCESS_TOKEN }}
          compute_env: ${{ matrix.compute_env.ref }}
          run_name: "${{ steps.id.outputs.name }}"
          profiles: ${{ matrix.pipeline.profiles }}
          wait: SUBMITTED
          parameters: |
            {
                "outdir": "${{ matrix.compute_env.workdir }}/${{ matrix.pipeline.name }}/results-test-${{ needs.getdate.outputs.date }}"
            }

      - name: "Store run details as artifact"
        if: success()
        run: |
          set -euo pipefail
          echo ${{ steps.submit-pipeline.outputs.json }} | jq -r '. += { "pipeline": "${{ matrix.pipeline.name }}_${{ matrix.compute_env.name }}" }' \
            >> ${{ steps.id.outputs.name }}_${{ steps.id.outputs.workspace }}_${{ needs.getdate.outputs.date }}.json

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: ${{ needs.getdate.outputs.date }}_run_details
          path: "${{ steps.id.outputs.name }}_${{ steps.id.outputs.workspace }}_${{ needs.getdate.outputs.date }}.json"

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: ${{ matrix.pipeline.name }}_${{ matrix.compute_env.name }}_log
          path: tower_action_*.log

  checkmatrix:
    runs-on: ubuntu-latest
    needs: [runtest, getdate]
    continue-on-error: true
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.getdate.outputs.date }}_run_details
          path: run_details

      - name: "stage matrix"
        run: |
          set -euo pipefail
          echo "matrix=$(cat run_details/* | jq -c --slurp .)" >> $GITHUB_OUTPUT
        id: matrix

  checkrun:
    name: check.${{ matrix.includes.pipeline }}.${{ matrix.includes.workspaceId }}
    runs-on: ubuntu-latest
    needs: [getdate, checkmatrix]
    continue-on-error: true
    environment: ${{ inputs.timer || 'delay360mins' }}
    env:
      TOWER_ACCESS_TOKEN: ${{ secrets.TOWER_ACCESS_TOKEN }}
      TOWER_WORKSPACE_ID: ${{ matrix.includes.workspaceId }}
    strategy:
      matrix:
        includes: ${{ fromJSON(needs.checkmatrix.outputs.matrix) }}

    steps:
      - name: "print matrix input"
        run: |
          set -euo pipefail
          echo "${{ toJSON(matrix) }}"

      - name: Install tw CLI
        run: |
          set -euo pipefail
          wget -L https://github.com/seqeralabs/tower-cli/releases/download/v0.7.3/tw-0.7.3-linux-x86_64
          mv tw-* tw
          chmod +x tw
          sudo mv tw /usr/local/bin/

      - name: Get info
        if: ${{ !inputs.dryrun }}
        id: info
        run: |
          set -euo pipefail
          tw -o json runs view -w ${{ matrix.includes.workspaceId }} -i ${{ matrix.includes.workflowId }} | jq -r '.general |= . + { "workspace": "${{ matrix.includes.workspaceRef }}", "pipeline": "${{ matrix.includes.pipeline }}", "url": "${{ matrix.includes.workflowUrl }}" }' > ${{ matrix.includes.pipeline }}_${{ matrix.includes.workspaceId }}_${{ needs.getdate.outputs.date }}.json

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ needs.getdate.outputs.date }}_all_runs
          path: "${{ matrix.includes.pipeline }}_${{ matrix.includes.workspaceId }}_${{ needs.getdate.outputs.date }}.json"

      - name: Clearup
        if: ${{ (inputs.remove || true) && !inputs.dryrun }}
        run: |
          set -euo pipefail
          STATUS=$(tw -o json runs view -w ${{ matrix.includes.workspaceId }} -i ${{ matrix.includes.workflowId }} | jq -r '.general.status')
          if [ "SUCCEEDED" = $STATUS ]; then
            # Won't delete if run is active
            tw -o json runs delete -w ${{ matrix.includes.workspaceId }} -i ${{ matrix.includes.workflowId }}
          else
            echo "Run has not finished, delete with 'tw -o json runs delete -w ${{ matrix.includes.workspace }} -i ${{ matrix.includes.workflowId }}' when ready."
          fi

  slack:
    runs-on: ubuntu-latest
    needs: [getdate, checkrun]
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.getdate.outputs.date }}_all_runs
          path: runs

      - name: "Slack"
        if: ${{ ( github.event_name != 'workflow_dispatch' && inputs.slack ) || true }}
        run: |
          set -euo pipefail
          ls -1 runs/*
          cat runs/* | jq -r --slurp
          export MESSAGE=$(cat runs/* | jq -r --slurp '(["pipeline", "computeEnv", "workspace", "status", "workflowUrl"] | (., map(length*"-"))), (.[] | [.general.pipeline, .general.computeEnv, .general.workspace, .general.status, .general.url]) | @tsv' | column -ts $'\t')
          echo $MESSAGE
          curl -X POST -H 'Content-type: application/json' --data "{'text': \"\`\`\`$MESSAGE\`\`\`\"}" ${{ secrets.SLACK_HOOK_URL }}
