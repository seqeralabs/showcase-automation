name: seqera-showcase-autotest
run-name: run-pipelines
on:
  workflow_dispatch:
    inputs:
      dryrun:
        description: "Dryrun (do not submit pipeline)"
        default: false
        type: boolean
        required: false
      timer:
        description: "Environment"
        default: delay120mins
        type: choice
        options:
          - noDelay
          - delay1mins
          - delay5mins
          - delay15mins
          - delay30mins
          - delay60mins
          - delay120mins
          - delay360mins
          - waitForReviewer
      slack:
        description: Slack hook
        type: boolean
        required: false
        default: true
      remove:
        description: Delete run
        default: true
        type: boolean
        required: false

  schedule:
    # Every 2am
    - cron: "0 2 * * *"

jobs:
  getdate:
    runs-on: ubuntu-latest
    steps:
      - name: "Get current date"
        run: |
          set -euo pipefail
          echo "date=$(date +'%Y%m%d')" >> $GITHUB_OUTPUT
        id: date
    outputs:
      date: ${{ steps.date.outputs.date }}

  runtest:
    runs-on: ubuntu-latest
    name: launch.${{ matrix.pipeline.name }}.${{ matrix.compute_env.name }}
    needs: getdate
    continue-on-error: true
    strategy:
      matrix:
        pipeline:
          - { name: hello, url: hello, latest: true, profiles: "" }
          # - {
          #     name: rnaseq,
          #     url: nf-core-rnaseq,
          #     latest: true,
          #     profiles: "test",
          #   }
          # - {
          #     name: viralrecon-illumina,
          #     url: nf-core-viralrecon-illumina,
          #     latest: true,
          #     profiles: "test",
          #   }
          # - {
          #     name: viralrecon-nanopore,
          #     url: nf-core-viralrecon-nanopore,
          #     latest: true,
          #     profiles: "test_nanopore",
          #   }
          # - { name: sarek, url: nf-core-sarek, latest: true, profiles: "test" }
        compute_env:
          - {
              name: aws,
              ref: seqera_aws_ireland_fusionv2_nvme,
              workdir: "s3://seqeralabs-showcase",
              workspace_id: "138659136604200",
            }
        #   - {
        #       name: azure,
        #       ref: seqera_azure_virginia_fusion,
        #       workdir: "az://seqeralabs-showcase",
        #       workspace_id: "138659136604200",
        #     }
        #   - {
        #       name: gcp,
        #       ref: seqera_gcp_finland_fusion,
        #       workdir: "gs://seqeralabs-showcase-eu-north-1",
        #       workspace_id: "138659136604200",
        #     }
        # include:
        #   - compute_env:
        #       {
        #         name: aws,
        #         ref: seqera_aws_ireland_fusionv2_nvme,
        #         workdir: "s3://seqeralabs-showcase",
        #         workspace_id: "138659136604200",
        #       }
        #     pipeline:
        #       {
        #         name: sentieon,
        #         url: nf-sentieon,
        #         latest: true,
        #         profiles: "test",
        #       }

    steps:
      - name: "export unique run name"
        run: |
          set -euo pipefail
          echo "name=${{ matrix.pipeline.name }}_${{ matrix.compute_env.name }}_${{ needs.getdate.outputs.date }}_$(uuidgen | cut -c 1-8)" >> $GITHUB_OUTPUT
          echo "workspace=${{ matrix.compute_env.workspace_id }}" >> $GITHUB_OUTPUT
        id: id

      - uses: seqeralabs/action-tower-launch@v2
        if: ${{ !inputs.dryrun }}
        id: submit-pipeline
        with:
          pipeline: ${{ matrix.pipeline.url }}
          workspace_id: ${{ steps.id.outputs.workspace }}
          access_token: ${{ secrets.TOWER_ACCESS_TOKEN }}
          compute_env: ${{ matrix.compute_env.ref }}
          workdir: "${{ matrix.compute_env.workdir }}/work/${{ matrix.pipeline.name }}/work-${{ needs.getdate.outputs.date }}"
          run_name: "${{ steps.id.outputs.name }}"
          profiles: ${{ matrix.pipeline.profiles }}
          wait: SUBMITTED
          parameters: |
            {
                "outdir": "${{ matrix.compute_env.workdir }}/${{ matrix.pipeline.name }}/results-test-${{ needs.getdate.outputs.date }}"
            }

      - name: "Store run details as artifact"
        if: success()
        run: |
          set -euo pipefail
          echo ${{ steps.submit-pipeline.outputs.json }} | jq -r '. += { "pipeline": "${{ matrix.pipeline.name }}_${{ matrix.compute_env.name }}" }' \
            >> ${{ steps.id.outputs.name }}_${{ steps.id.outputs.workspace }}_${{ needs.getdate.outputs.date }}.json

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: ${{ needs.getdate.outputs.date }}_run_details
          path: "${{ steps.id.outputs.name }}_${{ steps.id.outputs.workspace }}_${{ needs.getdate.outputs.date }}.json"

      - uses: actions/upload-artifact@v3
        if: success() || failure()
        with:
          name: ${{ needs.getdate.outputs.date }}_launch_log
          path: tower_action_*.log

  clearup-and-delete:
    runs-on: ubuntu-latest
    needs: [runtest, getdate]
    continue-on-error: true
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: ${{ needs.getdate.outputs.date }}_run_details
          path: run_details

      - name: "stage matrix"
        run: |
          set -euo pipefail
          echo "matrix=$(cat run_details/* | jq -c --slurp .)" >> $GITHUB_OUTPUT
        id: matrix

      - name: setup-python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: install-dependencies
        run: |
          pip install -r requirements.txt

      - name: finish_workflow
        run: |
          echo python extract_metadata.py \
            -l DEBUG \
            -w 34830707738561 \
            -o workflowData.json \
            -i $(cat run_details/* | jq -r '.["workflow-info"]["general"]["workflowId"]')
