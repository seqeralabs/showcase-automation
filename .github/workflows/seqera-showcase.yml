name: seqera-showcase-autotest
run-name: run-pipelines
on:
  workflow_dispatch:
    inputs:
      dryrun:
        description: "Dryrun (do not submit pipeline)"
        default: false
        type: boolean
        required: false
      timer:
        description: "Environment"
        default: delay120mins
        type: choice
        options:
          - noDelay
          - delay1mins
          - delay5mins
          - delay15mins
          - delay30mins
          - delay60mins
          - delay120mins
          - delay360mins
          - waitForReviewer
      slack:
        description: Slack hook
        type: boolean
        required: false
        default: true
      remove:
        description: Delete run
        default: true
        type: boolean
        required: false

  schedule:
    # Every 2am
    - cron: "0 2 * * *"

jobs:
  launch:
    runs-on: ubuntu-latest
    env:
      TOWER_ACCESS_TOKEN: ${{ secrets.TOWER_ACCESS_TOKEN }}
    outputs:
      matrix: ${{ steps.matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
      - name: Install tw CLI
        run: |
          set -euo pipefail
          wget -L https://github.com/seqeralabs/tower-cli/releases/download/v0.9.1/tw-linux-x86_64
          mv tw-* tw
          chmod +x tw
          sudo mv tw /usr/local/bin/

      - name: setup python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: install dependencies
        run: |
          pip install -r requirements.txt

      - name: launch_pipelines
        run: |
          python launch_pipelines.py \
            -l DEBUG \
            -p hello.json \
            -c aws.json azure.json gcp.json \
            -i include.json \
            -e exclude.json \
            -o ${{ github.run_id }}_${{ github.run_number }}_${{ github.run_attempt }}.json

      - uses: actions/upload-artifact@v3
        with:
          name: ${{ github.run_id }}_${{ github.run_number }}_${{ github.run_attempt }}_launch_json
          path: ${{ github.run_id }}_${{ github.run_number }}_${{ github.run_attempt }}.json

      - name: Collect matrix
        id: matrix
        run: |
          set -euo pipefail
          echo "matrix=$(cat ${{ github.run_id }}_${{ github.run_number }}_${{ github.run_attempt }}.json)" >> $GITHUB_OUTPUT

  # checkrun:
  #   name: check.${{ matrix.includes.pipeline }}.${{ matrix.includes.workspaceId }}
  #   runs-on: ubuntu-latest
  #   needs: [launch]
  #   continue-on-error: true
  #   environment: ${{ inputs.timer || 'delay120mins' }}
  #   env:
  #     TOWER_ACCESS_TOKEN: ${{ secrets.TOWER_ACCESS_TOKEN }}
  #     TOWER_WORKSPACE_ID: ${{ matrix.includes.workspaceId }}
  #   strategy:
  #     matrix:
  #       includes: ${{ fromJSON(needs.launch.outputs.matrix) }}

  #   steps:
  #     - name: "print matrix input"
  #       run: |
  #         set -euo pipefail
  #         echo "${{ toJSON(matrix) }}"

  #     - name: Install tw CLI
  #       run: |
  #         set -euo pipefail
  #         wget -L https://github.com/seqeralabs/tower-cli/releases/download/v0.8.0/tw-linux-x86_64
  #         mv tw-* tw
  #         chmod +x tw
  #         sudo mv tw /usr/local/bin/

  #     - name: Get info
  #       if: ${{ !inputs.dryrun }}
  #       id: info
  #       run: |
  #         set -euo pipefail
  #         tw -o json runs dump -w ${{ matrix.includes.workspaceId }} -i ${{ matrix.includes.workflowId }} --add-task-logs --add-fusion-logs --silent --output ${{ matrix.includes.pipeline }}_${{ matrix.includes.workspaceId }}_${{ needs.getdate.outputs.date }}.tar.gz
  #         tar -xzvf ${{ matrix.includes.pipeline }}_${{ matrix.includes.workspaceId }}_${{ needs.getdate.outputs.date }}.tar.gz
  #         tw -o json runs view -w ${{ matrix.includes.workspaceId }} -i ${{ matrix.includes.workflowId }} | jq -r '.general |= . + { "workspace": "${{ matrix.includes.workspaceRef }}", "pipeline": "${{ matrix.includes.pipeline }}", "url": "${{ matrix.includes.workflowUrl }}" }' > workflow-info.json
  #         jq -n 'reduce inputs as $s (.; (.[input_filename|rtrimstr(".json")]) += $s)' *.json > ${{ matrix.includes.pipeline }}_${{ matrix.includes.workspaceId }}_${{ needs.getdate.outputs.date }}_dump.json

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ needs.getdate.outputs.date }}_all_run_dumps
  #         path: "${{ matrix.includes.pipeline }}_${{ matrix.includes.workspaceId }}_${{ needs.getdate.outputs.date }}.tar.gz"

  #     - uses: actions/upload-artifact@v3
  #       with:
  #         name: ${{ needs.getdate.outputs.date }}_all_run_json
  #         path: "${{ matrix.includes.pipeline }}_${{ matrix.includes.workspaceId }}_${{ needs.getdate.outputs.date }}_dump.json"

  #     - name: Clearup
  #       if: ${{ (inputs.remove || true) && !inputs.dryrun }}
  #       run: |
  #         set -euo pipefail
  #         STATUS=$(tw -o json runs view -w ${{ matrix.includes.workspaceId }} -i ${{ matrix.includes.workflowId }} | jq -r '.general.status')
  #         if [ "SUCCEEDED" = $STATUS ]; then
  #           # Won't delete if run is active
  #           tw -o json runs delete -w ${{ matrix.includes.workspaceId }} -i ${{ matrix.includes.workflowId }}
  #         else
  #           echo "Run has not finished, delete with 'tw -o json runs delete -w ${{ matrix.includes.workspace }} -i ${{ matrix.includes.workflowId }}' when ready."
  #         fi

  # slack:
  #   runs-on: ubuntu-latest
  #   needs: [getdate, checkrun]
  #   steps:
  #     - uses: actions/download-artifact@v3
  #       with:
  #         name: ${{ needs.getdate.outputs.date }}_all_run_json
  #         path: runs

  #     - name: "Slack"
  #       if: ${{ ( github.event_name != 'workflow_dispatch' && inputs.slack ) || true }}
  #       run: |
  #         set -euo pipefail
  #         ls -1 runs/*
  #         cat runs/* | jq -r --slurp
  #         export MESSAGE=$(cat runs/* | jq -r --slurp '(["pipeline", "workspace", "computeEnv", "status", "platform", "nextflow", "revision", "workflowUrl"] | (., map(length*"-"))), (.[] | [.["workflow-info"]["general"]["pipeline"], .["workflow-info"]["general"]["workspace"], .["workflow-launch"]["computeEnv"]["name"], .["workflow"]["status"], .["service-info"]["version"], .["workflow"]["nextflow"]["version"], .["workflow-launch"]["revision"], .["workflow-info"]["general"]["url"]]) | map(.//"-") | @tsv' | column -ts $'\t')
  #         echo $MESSAGE
  #         curl -X POST -H 'Content-type: application/json' --data "{'text': \"\`\`\`$MESSAGE\`\`\`\"}" ${{ secrets.SLACK_HOOK_URL }}
